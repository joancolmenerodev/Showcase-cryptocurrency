apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion AndroidConfig.COMPILE_SDK_VERSION
    buildToolsVersion AndroidConfig.BUILD_TOOLS_VERSION
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    defaultConfig {
        minSdkVersion AndroidConfig.MIN_SDK_VERSION
        targetSdkVersion AndroidConfig.TARGET_SDK_VERSION
        versionCode AndroidConfig.VERSION_CODE
        versionName AndroidConfig.VERSION_NAME
        testInstrumentationRunner AndroidConfig.TEST_INSTRUMENTATION_RUNNER
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation(LibrariesDependencies.RETROFIT_LOGGING_INTERCEPTOR)
    implementation(LibrariesDependencies.RETROFIT_GSON_CONVERTER)
    api(LibrariesDependencies.RETROFIT)
    api(LibrariesDependencies.DAGGER)
    api(LibrariesDependencies.DAGGER_ANDROID)
    api(LibrariesDependencies.DAGGER_ANDROID_SUPPORT)
    kapt LibrariesDependencies.DAGGER_ANDROID_KAPT
    kapt LibrariesDependencies.DAGGER_KAPT
    implementation project(ModuleDependencies.CRYPTO_LIST)

}
